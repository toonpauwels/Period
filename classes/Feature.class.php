<?phpclass ListItem{    private $m_sList;    public function __set($p_sProperty, $p_vValue)    {        switch ($p_sProperty) {            case "AddList":                if ($p_vValue == "") {                    throw new Exception("De lijst moet een naam hebben.");                }                $this->m_sList = $p_vValue;                break;            case "DelList":                if($p_vValue == ""){                    throw new Exception("Geef de naam van een lijst in.");                }                $this->m_sList = $p_vValue;                break;        }    }    public function __get($p_sProperty)    {        switch ($p_sProperty) {            case "AddList":                return $this->m_sList;                break;            case "DelList":                return $this->m_sList;                break;        }    }    public function SaveList(){                $conn = new PDO("mysql:host=localhost; dbname=period", "root", "");            $statement = $conn->prepare("INSERT INTO lists (listitem) VALUES (:listitem)");            $statement->bindValue(":listitem", $this->m_sList);            $res = $statement->execute();            return ( $res );            }    public function DeleteList(){            $conn = new PDO("mysql:host=localhost; dbname=period", "root", "");            $statement = $conn->prepare("DELETE FROM lists WHERE listitem = :listitem");            $statement->bindValue(":listitem", $this->m_sList);            $statement->execute();    }    public function GetLists(){            $conn = new PDO("mysql:host=localhost;dbname=period", "root", "");            $statement = $conn->prepare("select * from lists");            $statement->execute();            $result = $statement->fetchAll();            return $result;    }}class TaskItem{    private $m_sTitel;    private $m_sVak;    private $m_dDatum;    public function __set($p_sProperty, $p_vValue)    {        switch ($p_sProperty) {            case "titel":                $this->m_sTitel = $p_vValue;                break;            case "vak":                $this->m_sVak = $p_vValue;                break;            case "datum";            $this->m_dDatum = $p_vValue;            break;        }    }    public function __get($p_sProperty)    {        switch ($p_sProperty) {            case "titel":                return $this->m_sTitel;                break;            case "vak":                return $this->m_sVak;                break;            case "datum":                return $this->m_dDatum;                break;        }    }    public function SaveTask(){            $conn = new PDO("mysql:host=localhost; dbname=period", "root", "");            $statement = $conn->prepare("INSERT INTO tasks (titel, vak, datum) VALUES (:titel, :vak, :datum)");            $statement->bindValue(":titel", $this->m_sTitel);            $statement->bindValue(":vak", $this->m_sVak);            $statement->bindValue(":datum", $this->m_dDatum);            $res = $statement->execute();            return ( $res );    }    public function GetTasks(){        $conn = new PDO("mysql:host=localhost;dbname=period", "root", "");        $statement = $conn->prepare("select * from tasks ORDER BY datum");        $statement->execute();        $resultTask = $statement->fetchAll();        return $resultTask;    }}class Vakken{    private $m_sVak;    public function __set($p_sProperty, $p_vValue)    {        switch ($p_sProperty) {            case "Vak":                if ($p_vValue == "") {                    throw new Exception("Het vak moet een naam hebben.");                }                $this->m_sVak = $p_vValue;                break;        }    }    public function __get($p_sProperty)    {        switch ($p_sProperty) {            case "Vak":                return $this->m_sVak;                break;        }    }    public function SaveVak(){        $conn = new PDO("mysql:host=localhost; dbname=period", "root", "");        $statement = $conn->prepare("INSERT INTO vakken (vak) VALUES (:vak)");        $statement->bindValue(":vak", $this->m_sVak);        $result = $statement->execute();        return $result;    }    public function DeleteVak(){        $conn = new PDO("mysql:host=localhost; dbname=period", "root", "");        $statement = $conn->prepare("DELETE FROM vakken WHERE vak = :vak");        $statement->bindValue(":vak", $this->m_sVak);        $statement->execute();    }    public function GetVakken(){        $conn = new PDO("mysql:host=localhost;dbname=period", "root", "");        $statement = $conn->prepare("select * from vakken");        $statement->execute();        $resultVak = $statement->fetchAll();        return $resultVak;    }}